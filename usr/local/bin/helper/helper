#!/bin/bash

# config
    source config/drawing.sh
    source config/monitors.sh

# firewalls
    source firewalls/firewallWatcher.sh
    source firewalls/firewallPersistentSave.sh
    # rulesets
        source firewalls/rulesets/firewallHome.sh
        source firewalls/rulesets/firewallWeb.sh
        source firewalls/rulesets/firewallBackup.sh
        source firewalls/rulesets/firewallReset.sh
        source firewalls/rulesets/firewallHomeLimited.sh
        source firewalls/rulesets/firewallHomeLax.sh
        source firewalls/rulesets/firewallLocal.sh
    
# popular
    source popular/updater.sh

# special
    source special/install.sh
    source special/startup.sh

# support
    source support/usage.sh
    source support/runSudo.sh
    source support/elevateCheck.sh
    

while getopts "umdsf:iwav" FLAG; do
    case "$FLAG" in
        u)
            elevateCheck
            updater
            exit
            ;;
        m)
            monitors
            exit
            ;;
        d)
            elevateCheck
            drawing
            exit
            ;;
        s)
            elevateCheck
            startup
            exit
            ;;
        f)
            elevateCheck
            if [ "$OPTARG" == "home" ]; then
                firewallHome
            elif [ "$OPTARG" == "web" ]; then
                firewallWebServer
            elif [ "$OPTARG" == "backup" ]; then
                firewallBackupServer
            elif [ "$OPTARG" == "limited" ]; then
                firewallHomeLimited
            elif [ "$OPTARG" == "reset" ]; then
                firewallReset
            elif [ "$OPTARG" == "lax" ]; then
                firewallHomeLax
            elif [ "$OPTARG" == "local" ]; then
                firewallLocal
            else
                echo -e "\n\e[31mSorry, but '$OPTARG' is not a valid argument. See valid Arugments for option 'firewall' below\e[39m"
                usage
            fi
            exit
            ;;

        i)
            install
            exit
            ;;
            
        w)
            elevateCheck
            firewallWatcher
            exit
            ;;
    esac
done

usage #calls help function in help.sh file