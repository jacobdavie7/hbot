#!/bin/bash

MAIN_DIR=/usr/local/bin/helper_package/helperModules
#MAIN_DIR=/home/jacob/Documents/git/helper/usr/local/bin/helper_package/helperModules

# general
    source $MAIN_DIR/general/updater.sh
    source $MAIN_DIR/general/xfceFix.sh
    source $MAIN_DIR/general/clean.sh

# config
    source $MAIN_DIR/config/drawing.sh
    source $MAIN_DIR/config/monitors.sh
    source $MAIN_DIR/config/vpnLowRisk.sh
    source $MAIN_DIR/config/vpnHighRisk.sh
    source $MAIN_DIR/config/timezone.sh

# firewalls
    source $MAIN_DIR/firewalls/firewallWatcher.sh
    source $MAIN_DIR/firewalls/firewallPersistentSave.sh
    
    # rulesets
        source $MAIN_DIR/firewalls/rulesets/firewallHome.sh
        source $MAIN_DIR/firewalls/rulesets/firewallWeb.sh
        source $MAIN_DIR/firewalls/rulesets/firewallBackup.sh
        source $MAIN_DIR/firewalls/rulesets/firewallReset.sh
        source $MAIN_DIR/firewalls/rulesets/firewallHomeLimited.sh
        source $MAIN_DIR/firewalls/rulesets/firewallHomeLax.sh
        source $MAIN_DIR/firewalls/rulesets/firewallLocal.sh
        source $MAIN_DIR/firewalls/rulesets/firewallSecure.sh

# special
    source $MAIN_DIR/special/install.sh
    source $MAIN_DIR/special/startup.sh

# support
    source $MAIN_DIR/support/usage.sh
    source $MAIN_DIR/support/runSudo.sh
    source $MAIN_DIR/support/elevateCheck.sh
    
while getopts "umdsf:iwav:xct:" FLAG; do
    case "$FLAG" in
        u)
            elevateCheck
            updater
            exit
            ;;
        m)
            monitors
            exit
            ;;
        d)
            elevateCheck
            drawing
            exit
            ;;
        s)
            elevateCheck
            startup
            exit
            ;;
        f)
            elevateCheck
            if [ "$OPTARG" == "home" ]; then
                firewallHome
            elif [ "$OPTARG" == "web" ]; then
                firewallWebServer
            elif [ "$OPTARG" == "backup" ]; then
                firewallBackupServer
            elif [ "$OPTARG" == "limited" ]; then
                firewallHomeLimited
            elif [ "$OPTARG" == "reset" ]; then
                firewallReset
            elif [ "$OPTARG" == "lax" ]; then
                firewallHomeLax
            elif [ "$OPTARG" == "local" ]; then
                firewallLocal
            elif [ "$OPTARG" == "secure" ]; then
                firewallHomeSecure
            else
                echo -e "\n\e[31mSorry, but '$OPTARG' is not a valid argument. See valid Arugments for option 'firewall' below\e[39m"
                usage
            fi
            exit
            ;;

        i)
            elevateCheck
            install
            exit
            ;;
            
        w)
            elevateCheck
            firewallWatcher
            exit
            ;;

        x)
            xfceFix
            exit
            ;;

        v)
            if [ "$OPTARG" == "low" ]; then
                vpnLowRisk
            exit
            elif [ "$OPTARG" == "high" ]; then
                elevateCheck
                vpnHighRisk
            fi
            exit
            ;;

        c)
            elevateCheck
            clean
            exit
            ;;
        t)
            elevateCheck
            if [ "$OPTARG" == "pacific" ]; then
                timezonePacific
            exit
            elif [ "$OPTARG" == "mountain" ]; then
                timezoneMountain
            exit
            elif [ "$OPTARG" == "central" ]; then
                timezoneCentral
            exit
            elif [ "$OPTARG" == "eastern" ]; then
                timezoneEastern
            exit
            elif [ "$OPTARG" == "arizona" ]; then
                timezoneArizona
            exit
            elif [ "$OPTARG" == "korea" ]; then
                timezoneKorea
            exit
            elif [ "$OPTARG" == "auto" ]; then
                timezoneAuto
            exit
            else
                echo -e "\n\e[31mSorry, but '$OPTARG' is not a valid argument. See valid Arugments for option 'timezone' below\e[39m"
                usage
            fi
            exit
            ;;

    esac
done

usage #calls help function in help.sh file